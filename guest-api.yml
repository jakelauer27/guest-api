openapi: 3.0.1
info:
  title: Guest API
  description: This is an api for CRUD operations on a park Guest.  parkId is included
    in the base path of every route to scope the request to a certain park
  version: 0.0.1
servers:
- url: /{parkId}
tags:
- name: guest
  description: Everything about Guests
- name: guestBlockedStatus
  description: Guest's blocks
- name: additionalInformation
  description: Guest's additional information
- name: paymentCard
  description: Guest's payment cards
- name: file
  description: Guest's files
paths:
  /guest:
    get:
      tags:
      - guest
      summary: Search for a guest
      operationId: searchGuest
      parameters:
      - name: term
        in: query
        schema:
          type: string
      responses:
        200:
          description: Guest Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Guest'
    post:
      tags:
      - guest
      summary: Add a new guest
      operationId: addGuest
      requestBody:
        description: The Guest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Guest'
        required: true
      responses:
        200:
          description: Guest Created
          content: {}
      x-codegen-request-body-name: body
  /guest/{guestId}/profile:
    get:
      tags:
      - guest
      summary: Return a guest with their full profile
      operationId: getGuestProfile
      parameters:
      - name: guestId
        in: path
        description: ID of guest to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestProfile'
        404:
          description: Guest not found
          content: {}
  /guest/{guestId}:
    get:
      tags:
      - guest
      summary: Find guest by ID
      description: Returns a single guest
      operationId: getGuestById
      parameters:
      - name: guestId
        in: path
        description: ID of guest to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guest'
        404:
          description: Guest not found
          content: {}
    put:
      tags:
      - guest
      summary: Updates a guest
      operationId: updateGuest
      parameters:
      - name: guestId
        in: path
        description: ID of guest that needs to be updated
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Updated guest info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Guest'
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - guest
      summary: Deletes a guest
      operationId: deleteGuest
      parameters:
      - name: guestId
        in: path
        description: Guest id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        404:
          description: Guest not found
          content: {}
  /guest/{guestId}/blocked-status:
    get:
      tags:
      - guestBlockedStatus
      summary: Find the current blocked status of a guest
      description: Returns a blocked status or 404 if it doesnt exist
      operationId: getBlockedStatuses
      parameters:
      - name: guestId
        in: path
        description: ID of guest to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockedStatus'
        404:
          description: Guest blocked status not found (not blocked)
          content: {}
    delete:
      tags:
      - guestBlockedStatus
      summary: Deletes a guest's blocked status
      operationId: deleteGuestBlockedStatus
      parameters:
      - name: guestId
        in: path
        description: Guest's id to block for
        required: true
        schema:
          type: integer
          format: int64
      responses:
        404:
          description: Guest block not found
          content: {}
  /guest/additional-information:
    get:
      tags:
      - additionalInformation
      summary: Find all the additional information we requst for guests
      description: Returns the additional information
      operationId: getAdditionalInformation
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdditionalInformation'
    post:
      tags:
      - additionalInformation
      summary: Create a new field to collect from guests
      operationId: addAdditionalInformation
      requestBody:
        description: Field to collect
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AdditionalInformation'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  /guest/{guestId}/additional-information:
    get:
      tags:
      - additionalInformation
      summary: Find the additional information of a guest
      description: Returns the additional person information
      operationId: getGuestAdditionalInformation
      parameters:
      - name: guestId
        in: path
        description: ID of guest to return additional information for
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdditionalInformationEntry'
        404:
          description: Guest not found
          content: {}
  /guest/{guestId}/payment-card:
    get:
      tags:
      - paymentCard
      summary: Find all payment cards for a guest
      operationId: getGuestsPaymentCards
      parameters:
      - name: guestId
        in: path
        description: ID of the guest
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentCard'
        404:
          description: Guest not found
          content: {}
  /guest/{guestId}/payment-card/{paymentCardId}:
    delete:
      tags:
      - paymentCard
      summary: Delete
      operationId: deleteGuestPaymentCard
      parameters:
      - name: guestId
        in: path
        description: ID of the guest
        required: true
        schema:
          type: integer
          format: int64
      - name: paymentCardId
        in: path
        description: ID of the payment card
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content: {}
        404:
          description: Guest or card not found
          content: {}
  /guest/{guestId}/files:
    get:
      tags:
      - file
      summary: Find the files for a guest
      operationId: getGuestFiles
      parameters:
      - name: guestId
        in: path
        description: ID of guest to return files for
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
        404:
          description: Guest not found
          content: {}
  /guest/{guestId}/files/{fileId}:
    delete:
      tags:
      - file
      summary: Delete a file for a guest
      operationId: deleteGuestFile
      parameters:
      - name: guestId
        in: path
        description: ID of guest to return files for
        required: true
        schema:
          type: integer
          format: int64
      - name: fileId
        in: path
        description: ID of file to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content: {}
        404:
          description: Guest or file not found
          content: {}
components:
  schemas:
    Guest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
          example: Guest
        middleName:
          type: string
          example: Guester
          nullable: true
        lastName:
          type: string
          example: Guesterson
        email:
          type: string
          example: test@campspot.com
        phone1:
          type: string
          example: 555-555-5555
        phone2:
          type: string
          example: 555-555-5555
          nullable: true
        phone3:
          type: string
          example: 555-555-5555
          nullable: true
        phone1Type:
          type: string
          example: home
        phone2Type:
          type: string
          example: cell
          nullable: true
        phone3Type:
          type: string
          example: work
          nullable: true
        yogiId:
          type: string
          example: "123456"
          nullable: true
        mailingAddress:
          $ref: '#/components/schemas/Address'
          nullable: true
        billingAddress:
          $ref: '#/components/schemas/Address'
          nullable: true
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: John Doe
        address1:
          type: string
          example: 123 Main St
          nullable: true
        address2:
          type: string
          example: Apt 2
          nullable: true
        city:
          type: string
          example: Denver
        state:
          type: string
          example: CO
        postalCode:
          type: string
          example: "80022"
          nullable: true
        country:
          type: string
          example: USA
        type:
          type: string
          description: address type
          enum:
          - SHIPPING
          - BILLING
    AdditionalInformation:
      type: object
      properties:
        name:
          type: string
          example: notes
    AdditionalInformationEntry:
      type: object
      properties:
        key:
          type: string
          example: Customer Import Note
        value:
          type: string
          example: They were the best guest import ever
    BlockedStatus:
      type: object
      properties:
        note:
          type: string
          example: they are not welcome back here
        created:
          type: string
          format: date
    PaymentCard:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cardType:
          type: string
          example: credit
        maskedAccount:
          type: string
          example: "1234"
        cardholderName:
          type: string
          example: Test Testerson
        address:
          type: string
          example: 123 Main St
        cardExpiration:
          type: string
          example: 10/2040
    RvProfile:
      type: object
      properties:
        length:
          type: integer
          format: int32
        slideoutValue:
          maximum: 4
          minimum: 1
          type: integer
          format: int32
          example: 3
        slideoutName:
          type: string
          example: Passenger Side
        rvTypeId:
          type: integer
          format: int32
        rvTypeName:
          type: string
          example: Pop-up
    File:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fileName:
          type: string
          example: driversLicense.png
        url:
          type: string
          example: http://example.com/driversLicense.png
        note:
          type: string
          example: freeform text
    GuestProfile:
      type: "object"
      allOf:
        - $ref: '#/components/schemas/Guest'
      properties:
        id:
          type: "integer"
          format: "int64"
        rvProfiles: 
          type: "array"
          items: 
            $ref: '#/components/schemas/RvProfile'
        paymentCards:
          type: "array"
          items:
            $ref: '#/components/schemas/PaymentCard'
        blockedStatus:
          allOf:
            - $ref: '#/components/schemas/BlockedStatus'
          nullable: true
        files:
          type: "array"
          items:
            $ref: '#/components/schemas/File'
