swagger: "2.0"
info:
  description: "This is an api for CRUD operations on a park Guest.  parkId is included in the base path of every route to scope the request to a certain park"
  version: "0.0.1"
  title: "Guest API"
basePath: "/{parkId}"
tags:
- name: "guest"
  description: "Everything about Guests"
- name: "guestBlockedStatus"
  description: "Guest's blocks"
- name: "additionalInformation"
  description: "Guest's additional information"
- name: "paymentCard"
  description: "Guest's payment cards"
- name: "file"
  description: "Guest's files"
schemes:
- "https"
paths:
  /guest:
    get:
      tags:
      - "guest"
      summary: "Search for a guest"
      description: ""
      operationId: "searchGuest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: query
        name: term
        type: string
      responses:
        "200":
          description: "Guest Created"
          schema:
            type: array
            items:
              $ref: "#/definitions/Guest"
    post:
      tags:
      - "guest"
      summary: "Add a new guest"
      description: ""
      operationId: "addGuest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The Guest"
        required: true
        schema:
          $ref: "#/definitions/Guest"
      responses:
        "200":
          description: "Guest Created"
  /guest/{guestId}/profile:
    get:
      tags:
      - "guest"
      summary: "Return a guest with their full profile"
      description: ""
      operationId: "getGuestProfile"
      produces:
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "ID of guest to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/GuestProfile"
        "404":
          description: "Guest not found"
  /guest/{guestId}:
    get:
      tags:
      - "guest"
      summary: "Find guest by ID"
      description: "Returns a single guest"
      operationId: "getGuestById"
      produces:
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "ID of guest to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Guest"
        "404":
          description: "Guest not found"
    put:
      tags:
      - "guest"
      summary: "Updates a guest"
      description: ""
      operationId: "updateGuest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "ID of guest that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Updated guest info"
        required: true
        schema:
          $ref: "#/definitions/Guest"
      responses:
        "405":
          description: "Invalid input"
    delete:
      tags:
      - "guest"
      summary: "Deletes a guest"
      description: ""
      operationId: "deleteGuest"
      produces:
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "Guest id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "404":
          description: "Guest not found"
  /guest/{guestId}/blocked-status:
    get:
      tags:
      - "guestBlockedStatus"
      summary: "Find the current blocked status of a guest"
      description: "Returns a blocked status or 404 if it doesnt exist"
      operationId: "getBlockedStatuses"
      produces:
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "ID of guest to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/BlockedStatus"
        "404":
          description: "Guest blocked status not found (not blocked)"
    delete:
      tags:
      - "guestBlockedStatus"
      summary: "Deletes a guest's blocked status"
      description: ""
      operationId: "deleteGuestBlockedStatus"
      produces:
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "Guest's id to block for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "404":
          description: "Guest block not found"
  /guest/additional-information:
    get:
      tags:
      - "additionalInformation"
      summary: "Find all the additional information we requst for guests"
      description: "Returns the additional information"
      operationId: "getAdditionalInformation"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AdditionalInformation"
    post:
      tags:
      - "additionalInformation"
      summary: "Create a new field to collect from guests"
      description: ""
      operationId: "addAdditionalInformation"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Field to collect"
          required: true
          schema:
            $ref: "#/definitions/AdditionalInformation"
      responses:
        "200":
          description: "successful operation"
  /guest/{guestId}/additional-information:
    get:
      tags:
      - "additionalInformation"
      summary: "Find the additional information of a guest"
      description: "Returns the additional person information"
      operationId: "getGuestAdditionalInformation"
      produces:
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "ID of guest to return additional information for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AdditionalInformationEntry"
        "404":
          description: "Guest not found"
  /guest/{guestId}/payment-card:
    get:
      tags:
      - "paymentCard"
      summary: "Find all payment cards for a guest"
      description: ""
      operationId: "getGuestsPaymentCards"
      produces:
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "ID of the guest"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PaymentCard"
        "404":
          description: "Guest not found"
  /guest/{guestId}/payment-card/{paymentCardId}:
    delete:
      tags:
      - "paymentCard"
      summary: "Delete"
      description: ""
      operationId: "deleteGuestPaymentCard"
      produces:
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "ID of the guest"
        required: true
        type: "integer"
        format: "int64"
      - name: "paymentCardId"
        in: "path"
        description: "ID of the payment card"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
        "404":
          description: "Guest or card not found"
  /guest/{guestId}/files:
    get:
      tags:
      - "file"
      summary: "Find the files for a guest"
      description: ""
      operationId: "getGuestFiles"
      produces:
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "ID of guest to return files for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/File"
        "404":
          description: "Guest not found"
  /guest/{guestId}/files/{fileId}:
    delete:
      tags:
      - "file"
      summary: "Delete a file for a guest"
      description: ""
      operationId: "deleteGuestFile"
      produces:
      - "application/json"
      parameters:
      - name: "guestId"
        in: "path"
        description: "ID of guest to return files for"
        required: true
        type: "integer"
        format: "int64"
      - name: "fileId"
        in: "path"
        description: "ID of file to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
        "404":
          description: "Guest or file not found"
definitions:
  Guest:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      firstName:
        type: "string"
        example: "Guest"
      middleName:
        type: "string"
        example: "Guester"
      lastName:
        type: "string"
        example: "Guesterson"
      email:
        type: "string"
        example: "test@campspot.com"
      phone1:
        type: "string"
        example: "555-555-5555"
      phone2:
        type: "string"
        example: "555-555-5555"
      phone3:
        type: "string"
        example: "555-555-5555"
      phone1Type:
        type: "string"
        example: "home"
      phone2Type:
        type: "string"
        example: "cell"
      phone3Type:
        type: "string"
        example: "work"
      yogiId:
        type: "string"
        example: "123456"
      mailingAddress:
        nullable: true
        $ref: "#/definitions/Address"
      billingAddress:
        nullable: true
        $ref: "#/definitions/Address"
  Address:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "John Doe"
      address1:
        type: "string"
        example: "123 Main St"
      address2:
        type: "string"
        example: "Apt 2"
      city:
        type: "string"
        example: "Denver"
      state:
        type: "string"
        example: "CO"
      postalCode:
        type: "string"
        example: "80022"
      country:
        type: "string"
        example: "USA"
      type:
        type: "string"
        description: "address type"
        enum:
        - "SHIPPING"
        - "BILLING"
  AdditionalInformation:
    type: "object"
    properties:
      name:
        type: "string"
        example: "notes"
  AdditionalInformationEntry:
    type: "object"
    properties:
      key:
        type: "string"
        example: "Customer Import Note"
      value:
        type: "string"
        example: "They were the best guest import ever"
  BlockedStatus:
    type: "object"
    properties:
      note:
        type: "string"
        example: "they are not welcome back here"
      created:
        type: "string"
        format: "date"
        example: "2019-05-17T12:12:00Z"
  PaymentCard:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      cardType:
        type: "string"
        example: "credit"
      maskedAccount:
        type: "string"
        example: "1234"
      cardholderName:
        type: "string"
        example: "Test Testerson"
      address:
        type: "string"
        example: "123 Main St"
      cardExpiration:
        type: "string"
        example: "10/2040"
  RvProfile:
    type: "object"
    properties: 
      length:
        type: "integer"
        format: "int32"
      slideoutValue:
        minimum: 1
        maximum: 4
        type: "integer"
        format: "int32"
        example: 3
      slideoutName:
        type: "string"
        example: "Passenger Side"
      rvTypeId: 
        type: "integer"
        format: "int32"
      rvTypeName:
        type: "string"
        example: "Pop-up"
  File:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      fileName:
        type: "string"
        example: "driversLicense.png"
      url:
        type: "string"
        example: "http://example.com/driversLicense.png"
      note:
        type: "string"
        example: "freeform text"
  GuestProfile:
    allOf:
      - $ref: '#/definitions/Guest'
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      rvProfiles: 
        type: "array"
        items: 
          $ref: "#/definitions/RvProfile"
      paymentCards:
        type: "array"
        items:
          $ref: "#/definitions/PaymentCard"
      blockedStatus:
          $ref: "#/definitions/BlockedStatus"
          nullable: true
      files:
        type: "array"
        items:
          $ref: "#/definitions/File"
